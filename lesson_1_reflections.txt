How did viewing a diff between two versions of a file help you see the bug that was introduced?
-- By highlighting the main differences between the 2 files, searching for the bug became easier as the places we need to look into dramatically decreased

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
-- Because having a history enables the programmer to revert to a working code if the current code does not work

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
-- You are more in control of when to commit and what to commit. However, committing is subjective. Some commits might be too big or too small, depending on the developer.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
-- Because sometimes changes involve multiple files. Getting them in one commit makes us track changes needed for the logical change across all files in the commit.

How can you use the commands git log and git diff to view the history of files?
-- git log gives you the history of commits with the corresponding comments for the commit. git diff shows you the differences between 2 commits.

How might using version control make you more confident to make changes that could break something?
-- Because you always have the option to go back to the working code

Now that you have your workspace set up, what do you want to try using Git for?
-- To study